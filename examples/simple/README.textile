h1. Cucumber Java Simple example

This project is a very basic example that illustrates how to use Cucumber with
Java, writing step definitions in pure Java.

h2. Prerequisites

* Install Maven
* Install JRuby (1.2.0 or newer)

h3. Build the java code

<pre>
mvn clean package
</pre>

You will get an error from Maven complaining that the cuke4duke-java jar file doesn't
exist. (You'll need that jar if you want to use Cucumber tables in Java). Just do what Maven 
says - the cuke4duke jar can be found inside your cuke4duke-java gem, for example:

<pre>
mvn install:install-file -DgroupId=cuke4duke -DartifactId=cuke4duke-java -Dversion=0.0.2 -Dpackaging=jar -Dfile=/usr/local/jruby/lib/ruby/gems/1.8/gems/cuke4duke-java-0.0.2/lib/cuke4duke-java-0.0.2.jar
</pre>

Now, just try building again.

h3. Run the features:

<pre>
jruby -S cuke4duke features
</pre>

Try to make the features fail by modifying the java code or the feature file - check out the output...

See the "Cucumber Wiki":http://wiki.github.com/aslakhellesoy/cuke4duke for more info.

h2. Hacking

jruby \
-I features/support \
-r ~/.m2/repository/org/picocontainer/picocontainer/2.8/picocontainer-2.8.jar \
-r ~/.m2/repository/junit/junit/4.5/junit-4.5.jar \
-r target/cuke4duke-simple-example-1.0.0.jar \
-I ../../cuke4duke-java/lib \
~/scm/cucumber_rails/vendor/plugins/cuke4duke/bin/cuke4duke features

h2. TODO

* Make it possible to run Cucumber from Maven
** Make maven launch JRuby with a classpath that includes picocontainer, junit, step defnitions, code to test, any other deps.
** Remove all of the jar requires from env.rb