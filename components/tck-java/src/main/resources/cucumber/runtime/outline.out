Feature: Cukes

  Scenario Outline: cooking                     # cucumber/runtime/outline.feature:3
    Given the <container> contains <ingredient> # cucumber/runtime/outline.feature:4
    When I add <liquid>                         # cucumber/runtime/outline.feature:5
    And serve it to my guests                   # cucumber/runtime/outline.feature:6
    Then they'll be eating "<dish>"             # cucumber/runtime/outline.feature:7

    Examples: 
      | container | ingredient | liquid    | dish         |
      | bowl      | oats       | milk      | oatmeal      |
      | bowl      | oats       | milk      | oatmeal      |
      junit.framework.ComparisonFailure: null expected:<[glass]> but was:<[bowl]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.containerContainsIngredient(StepDefs.java:28)
      	at Cukes.cooking.Given the bowl contains oats(cucumber/runtime/outline.feature:4)

      | bowl      | oats       | milk      | oatmeal      |
      | bowl      | oats       | milk      | oatmeal      |
      junit.framework.ComparisonFailure: null expected:<[glass]> but was:<[bowl]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.containerContainsIngredient(StepDefs.java:28)
      	at Cukes.cooking.Given the bowl contains oats(cucumber/runtime/outline.feature:4)

      | bowl      | oats       | milk      | oatmeal      |
      | bowl      | oats       | milk      | oatmeal      |
      junit.framework.ComparisonFailure: null expected:<[glass]> but was:<[bowl]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.containerContainsIngredient(StepDefs.java:28)
      	at Cukes.cooking.Given the bowl contains oats(cucumber/runtime/outline.feature:4)

      | bowl      | oats       | milk      | oatmeal      |
      | bowl      | oats       | milk      | oatmeal      |
      junit.framework.ComparisonFailure: null expected:<[glass]> but was:<[bowl]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.containerContainsIngredient(StepDefs.java:28)
      	at Cukes.cooking.Given the bowl contains oats(cucumber/runtime/outline.feature:4)

      | glass     | guinness   | champagne | black velvet |
      | glass     | guinness   | champagne | black velvet |
      | glass     | guinness   | champagne | black velvet |
      | glass     | guinness   | champagne | black velvet |
      junit.framework.ComparisonFailure: null expected:<[milk]> but was:<[champagne]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.addLiquid(StepDefs.java:33)
      	at Cukes.cooking.When I add champagne(cucumber/runtime/outline.feature:5)

      | glass     | guinness   | champagne | black velvet |
      | glass     | guinness   | champagne | black velvet |
      junit.framework.ComparisonFailure: null expected:<[milk]> but was:<[champagne]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.addLiquid(StepDefs.java:33)
      	at Cukes.cooking.When I add champagne(cucumber/runtime/outline.feature:5)

      | glass     | guinness   | champagne | black velvet |
      | glass     | guinness   | champagne | black velvet |
      junit.framework.ComparisonFailure: null expected:<[milk]> but was:<[champagne]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.addLiquid(StepDefs.java:33)
      	at Cukes.cooking.When I add champagne(cucumber/runtime/outline.feature:5)


    Examples: 
      | container | ingredient | liquid    | dish        |
      | glass     | oats       | champagne | weird stuff |
      | glass     | oats       | champagne | weird stuff |
      | glass     | oats       | champagne | weird stuff |
      | glass     | oats       | champagne | weird stuff |
      junit.framework.ComparisonFailure: null expected:<[milk]> but was:<[champagne]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.addLiquid(StepDefs.java:33)
      	at Cukes.cooking.When I add champagne(cucumber/runtime/outline.feature:5)

      | glass     | oats       | champagne | weird stuff |
      | glass     | oats       | champagne | weird stuff |
      junit.framework.ComparisonFailure: null expected:<[milk]> but was:<[champagne]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.addLiquid(StepDefs.java:33)
      	at Cukes.cooking.When I add champagne(cucumber/runtime/outline.feature:5)

      | glass     | oats       | champagne | weird stuff |
      | glass     | oats       | champagne | weird stuff |
      junit.framework.ComparisonFailure: null expected:<[milk]> but was:<[champagne]>
      	at junit.framework.Assert.assertEquals(Assert.java:81)
      	at junit.framework.Assert.assertEquals(Assert.java:87)
      	at cucumber.runtime.java.StepDefs.addLiquid(StepDefs.java:33)
      	at Cukes.cooking.When I add champagne(cucumber/runtime/outline.feature:5)


You can implement step definitions for undefined steps with these snippets:

@And("^serve it to my guests$")
public void serve_it_to_my_guests() {
    // Express the Regexp above with the code you wish you had
}

@Then("^they'll be eating \"([^\"]*)\"$")
public void they'll_be_eating_(String arg1) {
    // Express the Regexp above with the code you wish you had
}

