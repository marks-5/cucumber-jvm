<project name="common" xmlns:ivy="antlib:org.apache.ivy.ant" default="test">
    <property name="ivy-version" value="2.2.0"/>
    <property name="ivy-install-dir" location="${user.home}/.ivy2/install"/>
    <property name="ivy-jar" location="${ivy-install-dir}/ivy-${ivy-version}.jar"/>
    <available property="ivy-installed" file="${ivy-jar}"/>

    <target name="-bootstrap-ivy" unless="ivy-installed">
        <mkdir dir="${ivy-install-dir}"/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy-version}/ivy-${ivy-version}.jar"
             dest="${ivy-jar}" usetimestamp="true" ignoreerrors="false"/>
    </target>

    <target name="-load-ivy" depends="-bootstrap-ivy">
        <taskdef uri="antlib:org.apache.ivy.ant" classpath="${ivy-jar}"/>
    </target>

    <target name="-init-ivy" depends="-load-ivy" description="Set up Ivy-related paths">
        <dirname property="common-basedir" file="${ant.file.common}"/>
        <!--<ivy:settings file="${common-basedir}/ivy-settings.xml"/>-->
        <!--<ivy:resolve log="quiet"/>-->
        <ivy:cachepath pathid="ivy.compile-classpath" conf="default"/>
        <ivy:cachepath pathid="ivy.test-classpath" conf="test"/>
        <property name="module" value="${ant.project.name}"/>
        <property name="version" value="${ivy.revision}"/>

        <property name="jars-dir" value="target/artifacts/jars"/>
        <property name="module-jar" location="${jars-dir}/${module}.jar"/>
        <property name="sources-jar" location="${jars-dir}/${module}-sources.jar"/>
        <property name="javadoc-jar" location="${jars-dir}/${module}-javadoc.jar"/>

        <path id="test-classpath">
            <path refid="ivy.test-classpath"/>
            <pathelement location="target/classes"/>
        </path>
    </target>

    <target name="debug" depends="-init-ivy">
        <property name="compile-classpath" refid="ivy.compile-classpath"/>
        <property name="test-classpath" refid="test-classpath"/>
        <echoproperties/>
        <ivy:report/>
    </target>

    <target name="compile-main" depends="-init-ivy" description="compile the module">
        <mkdir dir="target/classes"/>
        <javac destdir="target/classes"
               srcdir="src/main/java"
               classpathref="ivy.compile-classpath"
               includeantruntime="false"
               encoding="UTF-8"
               debug="true"/>
        <copy todir="target/classes" failonerror="false">
            <fileset dir="src/main/resources"/>
        </copy>
    </target>

    <target name="compile-test" depends="compile-main" description="compile the tests">
        <mkdir dir="target/test-classes"/>
        <javac destdir="target/test-classes"
               srcdir="src/test/java"
               classpathref="test-classpath"
               includeantruntime="false"
               encoding="UTF-8"
               debug="true"/>
        <copy todir="target/test-classes" failonerror="false">
            <fileset dir="src/test/resources"/>
        </copy>
    </target>

    <target name="test" depends="compile-test">
        <mkdir dir="target/reports"/>
        <junit printsummary="yes"
               fork="yes"
               forkmode="once"
               maxmemory="512m"
               failureproperty="junit.failure">
            <classpath>
                <path refid="test-classpath"/>
                <pathelement location="target/test-classes"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
            <batchtest todir="target/reports">
                <fileset dir="src/test/java">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
        <fail if="junit.failure" message="Tests failed"/>
    </target>

    <target name="jar" depends="compile-main,test" description="build the jar">
        <mkdir dir="${jars-dir}"/>
        <jar file="${module-jar}" basedir="target/classes">
        </jar>
    </target>

    <target name="publish-artifacts" depends="jar,test">
        <ivy:publish resolver="local" overwrite="true" artifactspattern="target/artifacts/[type]s/[artifact].[ext]"/>
    </target>

    <target name="clean">
        <delete dir="target"/>
    </target>

</project>
