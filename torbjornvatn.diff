diff --git a/cuke4duke-maven-plugin/src/main/java/cuke4duke/mojo/AbstractJRubyMojo.java b/cuke4duke-maven-plugin/src/main/java/cuke4duke/mojo/AbstractJRubyMojo.java
index 336076d..edee779 100644
--- a/cuke4duke-maven-plugin/src/main/java/cuke4duke/mojo/AbstractJRubyMojo.java
+++ b/cuke4duke-maven-plugin/src/main/java/cuke4duke/mojo/AbstractJRubyMojo.java
@@ -2,7 +2,6 @@ package cuke4duke.mojo;
 
 import org.apache.maven.artifact.Artifact;
 import org.apache.maven.artifact.DependencyResolutionRequiredException;
-import org.apache.maven.artifact.repository.ArtifactRepository;
 import org.apache.maven.plugin.AbstractMojo;
 import org.apache.maven.plugin.MojoExecutionException;
 import org.apache.maven.plugin.logging.Log;
@@ -42,6 +41,11 @@ public abstract class AbstractJRubyMojo extends AbstractMojo {
     protected File launchDirectory;
 
     /**
+     * @parameter expression="${jruby.home}"
+     */
+    protected String jrubyHome;
+
+    /**
      * The amount of memory to use when forking JRuby. Default is "384m".
      *
      * @parameter expression="${jruby.launch.memory}"
@@ -75,13 +79,6 @@ public abstract class AbstractJRubyMojo extends AbstractMojo {
      */
     private List testClasspathElements;
 
-    /**
-     * @parameter expression="${localRepository}"
-     * @required
-     * @readonly
-     */
-    private ArtifactRepository localRepository;
-
     protected Java jruby(List<String> args) throws MojoExecutionException {
         launchDirectory.mkdirs();
         Project project = null;
@@ -116,10 +113,12 @@ public abstract class AbstractJRubyMojo extends AbstractMojo {
             java.addEnv(classpath);
         }
 
-        Environment.Variable gemPathVar = new Environment.Variable();
-        gemPathVar.setKey("GEM_PATH");
-        gemPathVar.setValue(gemHome().getAbsolutePath());
-        java.addEnv(gemPathVar);
+        if (jrubyHome != null) {
+            Environment.Variable v = new Environment.Variable();
+            v.setKey("jruby.home");
+            v.setValue(jrubyHome);
+            java.addSysproperty(v);
+        }
 
         Path p = java.createClasspath();
         p.add((Path) project.getReference("maven.plugin.classpath"));
@@ -139,69 +138,21 @@ public abstract class AbstractJRubyMojo extends AbstractMojo {
     protected void installGem(List<String> gem) throws MojoExecutionException {
         List args = new ArrayList();
         args.add("-S");
-        args.add("gem");
-        args.add("install");
+        // maybe_install_gems only takes a list of gems, no versions or sources
+        if (gem.size() > 1) {
+            args.add("gem");
+            args.add("install");
+        } else {
+            args.add("maybe_install_gems");
+        }
+        args.addAll(gem);
         args.add("--no-ri");
         args.add("--no-rdoc");
-        args.add("--install-dir");
-        args.add(gemHome().getAbsolutePath());
-
-        args.addAll(gem);
 
         Java jruby = jruby(args);
-
-        // We have to override HOME to make RubyGems install gems
-        // where we want it. Setting GEM_HOME and using --install-dir
-        // is not enough.
-        Environment.Variable homeVar = new Environment.Variable();
-        homeVar.setKey("HOME");
-        homeVar.setValue(dotGemParent().getAbsolutePath());
-        jruby.addEnv(homeVar);
-        dotGemParent().mkdirs();
-
         jruby.execute();
     }
 
-    protected List parseGem(String gemSpec) throws MojoExecutionException {
-
-        List<String> gemArgs = new ArrayList<String>();
-        String[] gem = gemSpec.split(":");
-
-        String name = gem.length > 0 ? gem[0] : null;
-        String version = gem.length > 1 ? gem[1] : null;
-        String source = gem.length > 2 ? gem[2] : null;
-
-        if (name == null || name.trim().length() == 0) {
-            throw new MojoExecutionException("Requires atleast a name for <gem>");
-        } else {
-            gemArgs.add(name);
-        }
-
-        if (version != null && version.trim().length() > 0) {
-            gemArgs.add("-v" + version);
-        }
-
-        if (source != null && source.trim().length() > 0) {
-            if (source.contains("github")) {
-                gemArgs.add("--source");
-                gemArgs.add("http://gems.github.com");
-            }
-        }
-        return gemArgs;
-    }
-
-    protected File dotGemParent() {
-        return new File(localRepository.getBasedir());
-    }
-
-    protected File gemHome() {
-        return new File(dotGemParent(), ".gem");
-    }
-
-    protected File binDir() {
-        return new File(gemHome(), "bin");
-    }
-
     protected Project getProject() throws DependencyResolutionRequiredException {
         Project project = new Project();
         project.setBaseDir(mavenProject.getBasedir());
diff --git a/cuke4duke-maven-plugin/src/main/java/cuke4duke/mojo/CucumberMojo.java b/cuke4duke-maven-plugin/src/main/java/cuke4duke/mojo/CucumberMojo.java
index 89687fa..472bddc 100755
--- a/cuke4duke-maven-plugin/src/main/java/cuke4duke/mojo/CucumberMojo.java
+++ b/cuke4duke-maven-plugin/src/main/java/cuke4duke/mojo/CucumberMojo.java
@@ -8,7 +8,6 @@ import org.apache.tools.ant.taskdefs.Java;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Arrays;
-import java.io.File;
 
 /**
  * @goal features
@@ -30,7 +29,7 @@ public class CucumberMojo extends AbstractJRubyMojo {
      */
     protected String[] gems;
 
-    /**
+	 /**
      * @parameter expression="${cucumber.args}"
      */
     protected String[] args;
@@ -44,22 +43,48 @@ public class CucumberMojo extends AbstractJRubyMojo {
                 installGem(parseGem(s));
             }
         }
-
+        
         List<String> allArgs = new ArrayList<String>();
-        allArgs.add(cucumberBin().getAbsolutePath());
-        allArgs.addAll(Arrays.asList(args));
+        allArgs.add("-S");
+        allArgs.add("cucumber");
+		    allArgs.addAll(Arrays.asList(args));
         allArgs.add((features != null) ? features : "features");
 
         Java jruby = jruby(allArgs);
         try {
             jruby.execute();
         } catch (BuildException e) {
-            throw new MojoFailureException("Cucumber failed", e);
+            // suck it & spit
+            throw new MojoFailureException("Cucumber failed: " + e.getMessage());
         }
     }
 
-    private File cucumberBin() {
-        return new File(binDir(), "cucumber");
+    private List parseGem(String gemSpec) throws MojoExecutionException {
+
+        List<String> gemArgs = new ArrayList<String>();
+        String[] gem = gemSpec.split(":");
+
+        String name = gem.length > 0 ? gem[0] : null;
+        String version = gem.length > 1 ? gem[1] : null;
+        String source = gem.length > 2 ? gem[2] : null;
+
+        if (name == null || name.trim().length() == 0) {
+            throw new MojoExecutionException("Requires atleast a name for <gem>");
+        } else {
+            gemArgs.add(name);
+        }
+
+        if (version != null && version.trim().length() > 0) {
+            gemArgs.add("-v" + version);
+        }
+
+        if (source != null && source.trim().length() > 0) {
+            if (source.contains("github")) {
+                gemArgs.add("--source");
+                gemArgs.add("http://gems.github.com");
+            }
+        }
+        return gemArgs;
     }
 
 }
diff --git a/cuke4duke/src/main/java/cuke4duke/internal/StepMother.java b/cuke4duke/src/main/java/cuke4duke/internal/StepMother.java
index e5aafbb..404693a 100644
--- a/cuke4duke/src/main/java/cuke4duke/internal/StepMother.java
+++ b/cuke4duke/src/main/java/cuke4duke/internal/StepMother.java
@@ -1,19 +1,22 @@
 package cuke4duke.internal;
 
-import cuke4duke.Given;
-import cuke4duke.Then;
-import cuke4duke.When;
-import cuke4duke.Before;
-
 import java.lang.reflect.Method;
 import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 import org.jruby.RubyArray;
 
+import cuke4duke.Before;
+import cuke4duke.Given;
+import cuke4duke.Then;
+import cuke4duke.When;
+
 public abstract class StepMother {
     protected final List<Class<?>> classes = new ArrayList<Class<?>>();
-    protected final List<StepDefinition> stepDefinitions = new ArrayList<StepDefinition>();
+    protected final Map<String, StepDefinition> stepDefinitions = new HashMap<String, StepDefinition>();
     private List<Hook> beforeHooks = new ArrayList<Hook>();
 
     public abstract void newWorld();
@@ -22,9 +25,13 @@ public abstract class StepMother {
         classes.add(stepsClass);
     }
 
-    public List<StepDefinition> getStepDefinitions() {
-        return stepDefinitions;
+    public StepDefinition getStepDefinition(String regexp) {
+        return stepDefinitions.get(regexp);
     }
+    
+	public Collection<StepDefinition> getStepDefinitions() {
+		return stepDefinitions.values();
+	}
 
     public void executeBeforeHooks(RubyArray arrayWithScenario) throws Throwable {
         for(Hook hook : beforeHooks) {
@@ -55,7 +62,7 @@ public abstract class StepMother {
             regexpString = method.getAnnotation(Then.class).value();
         }
         if (regexpString != null) {
-            stepDefinitions.add(new StepDefinition(object, method, regexpString));
+            stepDefinitions.put(regexpString, new StepDefinition(object, method, regexpString));
         }
     }
 }
diff --git a/cuke4duke/src/test/java/cuke4duke/internal/StepMotherTest.java b/cuke4duke/src/test/java/cuke4duke/internal/StepMotherTest.java
index d25b588..e647bc7 100644
--- a/cuke4duke/src/test/java/cuke4duke/internal/StepMotherTest.java
+++ b/cuke4duke/src/test/java/cuke4duke/internal/StepMotherTest.java
@@ -2,11 +2,13 @@ package cuke4duke.internal;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotSame;
-import org.junit.Test;
 
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.List;
 
+import org.junit.Test;
+
 public abstract class StepMotherTest {
     protected StepMother mother;
 
@@ -14,8 +16,8 @@ public abstract class StepMotherTest {
     public void shouldInvokeSuccessfully() throws Throwable {
         mother.newWorld();
 
-        StepDefinition given = mother.getStepDefinitions().get(0);
-        StepDefinition then = mother.getStepDefinitions().get(1);
+        StepDefinition given = mother.getStepDefinition("I have (\\d+) (.*) cukes");
+        StepDefinition then = mother.getStepDefinition("I should have (\\d+) (.*) cukes");
 
         given.invokeOnTarget(new Object[]{"56", "green"});
         then.invokeOnTarget(new Object[]{"56", "green"});
@@ -25,8 +27,8 @@ public abstract class StepMotherTest {
     public void shouldInvokeWithFailure() throws Throwable {
         mother.newWorld();
 
-        StepDefinition given = mother.getStepDefinitions().get(0);
-        StepDefinition then = mother.getStepDefinitions().get(1);
+        StepDefinition given = mother.getStepDefinition("I have (\\d+) (.*) cukes");
+        StepDefinition then = mother.getStepDefinition("I should have (\\d+) (.*) cukes");
 
         given.invokeOnTarget(new Object[]{"56", "green"});
         then.invokeOnTarget(new Object[]{"99", "green"});
@@ -36,7 +38,7 @@ public abstract class StepMotherTest {
     public void shouldConvertLongs() throws Throwable {
         mother.newWorld();
 
-        StepDefinition given = mother.getStepDefinitions().get(2);
+        StepDefinition given = mother.getStepDefinition("Longs: (\\d+)");
         given.invokeOnTarget(new Object[]{"33"});
     }
 
@@ -44,20 +46,17 @@ public abstract class StepMotherTest {
     public void shouldCreateNewStepDefinitionsForEachNewWorld() throws Throwable {
         mother.newWorld();
 
-        List<StepDefinition> stepDefs1 = mother.getStepDefinitions();
+        Collection<StepDefinition> stepDefs1 = mother.getStepDefinitions();
         assertEquals(4, stepDefs1.size());
-
-        List<StepDefinition> oldSteps = new ArrayList<StepDefinition>();
-        for (StepDefinition stepDefinition : stepDefs1) {
-            oldSteps.add(stepDefinition);
-        }
+        List<StepDefinition> oldSteps = new ArrayList<StepDefinition>(stepDefs1);
 
         mother.newWorld();
-        List<StepDefinition> stepDefs2 = mother.getStepDefinitions();
+        Collection<StepDefinition> stepDefs2 = mother.getStepDefinitions();
         assertEquals(4, stepDefs2.size());
+        List<StepDefinition> newSteps = new ArrayList<StepDefinition>(stepDefs1);
 
         for (int i = 0; i < 4; i++) {
-            assertNotSame(oldSteps.get(i), stepDefs2.get(i));
+            assertNotSame(oldSteps.get(i), newSteps.get(i));
         }
     }
 }
diff --git a/examples/simple/build.xml b/examples/simple/build.xml
index 4da98ff..0d4c417 100644
--- a/examples/simple/build.xml
+++ b/examples/simple/build.xml
@@ -1,6 +1,5 @@
 <project xmlns:ivy="antlib:org.apache.ivy.ant" name="Cucumber Demo" default="cucumber" basedir=".">
-  <property name="dotgem.parent" value="${basedir}/lib"/>
-  <property name="gem.home" value="${dotgem.parent}/.gem"/>
+  <property name="gems" value="${basedir}/lib/gems"/>
 
   <target name="compile-steps" description="Compile test classes">
     <mkdir dir="target/test-classes"/>
@@ -23,8 +22,8 @@
         </fileset>
         <pathelement location="target/test-classes"/>
       </classpath>
-      <env key="GEM_PATH" value="${gem.home}"/>
-      <arg value="${basedir}/lib/.gem/bin/cucumber"/>
+      <env key="GEM_PATH" value="${gems}"/>
+      <arg value="${gems}/bin/cucumber"/>
       <arg value="--color"/>
       <arg value="--format"/>
       <arg value="pretty"/>
@@ -43,21 +42,21 @@
   </target>
 
   <target name="install-gems">
+    <mkdir dir="${gems}"/>
+
     <java classname="org.jruby.Main" fork="true" failonerror="true">
       <classpath>
         <fileset dir="lib">
           <include name="**/jruby*.jar"/>
         </fileset>
       </classpath>
-      <!-- Gems will go into lib/.gems --> 
-      <env key="HOME" value="${dotgem.parent}"/>
       <arg value="-S"/>
       <arg value="gem"/>
       <arg value="install"/>
       <arg value="--no-ri"/>
       <arg value="--no-rdoc"/>
       <arg value="--install-dir"/>
-      <arg value="${gem.home}"/>
+      <arg value="${gems}"/>
       <arg value="cucumber"/>
       <arg value="rspec"/>
     </java>
@@ -65,9 +64,9 @@
 
   <target name="clean" description="Delete all generated artifacts">
     <delete dir="${basedir}/target"/>
-    <delete dir="${basedir}/lib/.gem"/>
+    <delete dir="${gems}"/>
     <delete>
-      <fileset dir="${basedir}/lib" includes=".jar"/>
+      <fileset dir="${basedir}/lib" includes="**/*.jar"/>
     </delete>
   </target>
 
diff --git a/examples/simple/lib/.gitignore b/examples/simple/lib/.gitignore
index 2abcfb9..8eb5e9d 100644
--- a/examples/simple/lib/.gitignore
+++ b/examples/simple/lib/.gitignore
@@ -1,2 +1,2 @@
 *.jar
-.gem
\ No newline at end of file
+gems
\ No newline at end of file
diff --git a/examples/spring/pom.xml b/examples/spring/pom.xml
index 6ac7c55..d5a3ef1 100644
--- a/examples/spring/pom.xml
+++ b/examples/spring/pom.xml
@@ -71,6 +71,9 @@
       <plugin>
         <groupId>cuke4duke</groupId>
         <artifactId>cuke4duke-maven-plugin</artifactId>
+        <configuration>
+          <jrubyHome>${env.JRUBY_HOME}</jrubyHome>
+        </configuration>
         <executions>
           <execution>
             <id>run-features</id>
diff --git a/examples/webtest/pom.xml b/examples/webtest/pom.xml
index 64b3a06..64bb063 100644
--- a/examples/webtest/pom.xml
+++ b/examples/webtest/pom.xml
@@ -42,6 +42,7 @@
         <groupId>cuke4duke</groupId>
         <artifactId>cuke4duke-maven-plugin</artifactId>
         <configuration>
+          <jrubyHome>${env.JRUBY_HOME}</jrubyHome>
           <gems>
             <gem>jarib-celerity:0.0.6.8:github</gem>
             <gem>rspec:1.2.6</gem>
